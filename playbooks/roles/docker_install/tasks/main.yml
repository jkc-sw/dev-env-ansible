---
- name: Make sure some system dependencies are installed
  become: true
  apt:
    state: 'present'
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

- name: Download and Add docker Key to Apt-Get Keyring
  become: true
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add docker Repository into /etc/apt/sources.list
  become: true
  deb822_repository:
    name: docker
    types: deb
    signed_by: https://download.docker.com/linux/ubuntu/gpg
    architectures: amd64
    components: stable
    suites: '{{ ansible_distribution_release }}'
    uris: https://download.docker.com/linux/ubuntu
    state: present

- name: Install docker
  become: true
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose', 'docker-compose-plugin']
    state: present

- name: Add user to docker group
  become: true
  user:
    name: "{{ ansible_user_id }}"
    append: true
    groups: 'docker'

# - name: Need to make sure docker folder exist
#   file:
#     path: "/etc/docker"
#     state: directory
#
# - name: Add default dns to the docker daemon file
#   become: true
#   shell:
#     cmd: |
#       set -x  # fail when any fail
#       dj='/etc/docker/daemon.json'
#       if [[ ! -w "$dj" ]]; then
#         echo '{}' > "$dj"
#       fi
#       inp="$(cat "$dj")"
#       dnss=('"8.8.8.8"')
#       while read -r li; do
#         if [[ "$li" =~ nameserver ]]; then
#           dnss+=("\"${li#nameserver *}\"")
#         fi
#       done < /etc/resolv.conf
#       IFS=','
#       jq ".dns |=[${dnss[*]}]" <<<"$inp" | tee "$dj"
#     executable: /bin/bash
#   register: update_docker_daemonjson
#   changed_when: "update_docker_daemonjson.rc != 0"
#   failed_when: "update_docker_daemonjson.rc != 0"

