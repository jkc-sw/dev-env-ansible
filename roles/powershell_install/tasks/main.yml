---
- name: Download and Add Powershell Key to Apt-Get Keyring
  become: true
  apt:
    deb: "https://packages.microsoft.com/config/ubuntu/{{ ansible_lsb.release }}/packages-microsoft-prod.deb"
    state: present

- name: Make sure some system dependencies are installed
  become: true
  apt:
    state: 'present'
    update_cache: true
    name:
      - xz-utils
      - powershell

- name: Install .Net 6 SDK older ubuntu
  when: "ansible_lsb.release != '22.04'"
  become: true
  apt:
    state: present
    name:
      - dotnet-sdk-6.0

- name: Install .Net 6 SDK newer ubuntu
  when: "ansible_lsb.release == '22.04'"
  become: true
  apt:
    state: present
    name:
      - dotnet6

- name: Make sure we can install from PSGallery
  shell:
    cmd: |
      if ((Get-PSRepository -Name PSGallery).InstallationPolicy -ne 'Trusted')
      {
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
      }
    executable: /usr/bin/pwsh
  register: ps_allow_psgallery
  changed_when: "ps_allow_psgallery.rc != 0"

- name: Create profile.ps1 directory
  file:
    path: "{{ pwshrc_dir | dirname }}"
    state: directory

- name: Configure powershell
  blockinfile:
    marker: '# {mark} source append files'
    state: present
    path: "{{ pwshrc_dir }}"
    create: true
    backup: true
    block: |
      . '~/.config/powershell/profile_append.ps1'

- name: Make sure ps modules are installed
  shell:
    cmd: |
      if ('{{ item.name }}' -notin (Get-Module -ListAvailable | Select-Object -ExpandProperty Name))
      {
          Install-Module '{{ item.name }}' -Scope CurrentUser -AcceptLicense
      }
    executable: /usr/bin/pwsh
  register: ps_module_installed
  changed_when: "ps_module_installed.rc != 0"
  loop: "{{ ps_modules }}"
