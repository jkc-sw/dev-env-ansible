---
- name: Install the dependencies
  become: true
  apt:
    name: "{{ item }}"
    state: 'present'
  loop:
    - gnat
    - gcc
    - python3
    - python3-dev
    - python3-pip
    - make

- name: Check if ghdl is installed
  shell: command -v ghdl && echo good || echo bad
  register: ghdl_present
  changed_when: "'bad' in ghdl_present.stdout"

- name: Check if the folder exists
  stat:
    path: "{{ ghdl_repos }}"
  register: ghdl_repos_exists

- name: Temp Patch to get around the https://github.com/ansible/ansible/issues/67972
  when: "ghdl_repos_exists.stat.exists"
  shell:
    cmd: git fetch --depth 1 --tags -f
    chdir: "{{ ghdl_repos }}"
  register: git_fetch_ghdl
  changed_when: "git_fetch_ghdl.rc != 0"

- name: Get latest source code for ghdl
  git:
    repo: https://github.com/ghdl/ghdl.git
    dest: "{{ ghdl_repos }}"
    clone: true
    version: "{{ ghdl_repo_version | default('HEAD') }}"
    update: true
  register: git_clone_ghdl

- name: Create the build folder
  file:
    path: "{{ ghdl_repos }}/build"
    state: 'directory'

- name: Configure before running build for ghdl
  when: git_clone_ghdl.changed or ghdl_present.changed
  shell:
    chdir: "{{ ghdl_repos }}/build"
    cmd: |
      ../configure --with-llvm-config

- name: Compile, update ghdl
  when: git_clone_ghdl.changed or ghdl_present.changed
  shell:
    chdir: "{{ ghdl_repos }}/build"
    cmd: |
      make

- name: Compile, update and install ghdl
  when: git_clone_ghdl.changed or ghdl_present.changed
  become: true
  shell:
    chdir: "{{ ghdl_repos }}/build"
    cmd: |
      make install

- name: Install iverilog
  shell:
    cmd: |
      {{ dev_condaenv_condabin }} install -y -c conda-forge iverilog
  register: iverilog_install
  failed_when: "iverilog_install.rc != 0"
  changed_when: "iverilog_install.rc != 0"

- name: Install cocotb
  shell:
    cmd: |
      {{ dev_condaenv }}/bin/python -m pip \
        --disable-pip-version-check \
        --no-python-version-warning \
        install \
        git+https://github.com/cocotb/cocotb@{{ cocotb_repo_version }} \
        git+https://github.com/alexforencich/cocotbext-axi@{{ cocotbext_axi_repo_version }} \
        git+https://github.com/themperek/cocotb-test@{{ cocotb_test_repo_version }}
  register: cocotb_install
  failed_when: "cocotb_install.rc != 0"
  changed_when: "cocotb_install.rc != 0"

- name: Check if gtkwave is installed
  shell: command -v gtkwave && echo good || echo bad
  register: gtkwave_present
  changed_when: "'bad' in gtkwave_present.stdout"

- name: Check if the folder exists
  stat:
    path: "{{ gtkwave_repos }}"
  register: gtkwave_repos_exists

- name: Temp Patch to get around the https://github.com/ansible/ansible/issues/67972
  when: "gtkwave_repos_exists.stat.exists"
  shell:
    cmd: git fetch --depth 1 --tags -f
    chdir: "{{ gtkwave_repos }}"
  register: git_fetch_gtkwave
  changed_when: "git_fetch_gtkwave.rc != 0"

- name: Get latest source code for gtkwave
  git:
    repo: https://github.com/gtkwave/gtkwave.git
    dest: "{{ gtkwave_repos }}"
    clone: true
    version: "{{ gtkwave_repo_version | default('HEAD') }}"
    update: true
  register: git_clone_gtkwave

- name: Install the dependencies
  when: git_clone_gtkwave.changed or gtkwave_present.changed
  become: true
  apt:
    name: "{{ item }}"
    state: 'present'
  loop:
    - libgtk-3-0
    - libgtk-3-dev
    - tcl
    - tcl-dev
    - tcl8.6
    - tcl8.6-dev
    - tk
    - tk-dev
    - tk8.6
    - tk8.6-dev
    - gperf
    - libjudy-dev
    - libbz2-dev
    - liblzma-dev

- name: Configure before running build for gtkwave
  when: git_clone_gtkwave.changed or gtkwave_present.changed
  shell:
    chdir: "{{ gtkwave3_repos }}"
    cmd: |
      ./autogen.sh && \
      ./configure --enable-gtk3 --with-tcl=/usr/lib/tcl8.6 --with-tk=/usr/lib/tk8.6

- name: Compile, update gtkwave
  when: git_clone_gtkwave.changed or gtkwave_present.changed
  shell:
    chdir: "{{ gtkwave3_repos }}"
    cmd: |
      make -j{{ ansible_processor_vcpus }}

- name: Compile, update and install gtkwave
  when: git_clone_gtkwave.changed or gtkwave_present.changed
  become: true
  shell:
    chdir: "{{ gtkwave3_repos }}"
    cmd: |
      make install

# vim:et ts=2 sts=2 sw=2
