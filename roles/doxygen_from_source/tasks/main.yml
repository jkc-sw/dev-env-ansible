---
- name: Remove system installed package, as I am building from source
  become: true
  apt:
    name: doxygen
    state: absent

- name: Check if doxygen is installed
  shell: command -v doxygen && echo good || echo bad
  register: doxygen_present
  changed_when: "'bad' in doxygen_present.stdout"

- name: Check if the folder exists
  stat:
    path: "{{ doxygen_repos }}"
  register: doxygen_repos_exists

- name: Temp Patch to get around the https://github.com/ansible/ansible/issues/67972
  when: "doxygen_repos_exists.stat.exists"
  shell:
    cmd: git fetch --tags -f
    chdir: "{{ doxygen_repos }}"
  register: git_fetch_doxygen
  changed_when: "git_fetch_doxygen.rc != 0"

- name: Get latest source code for doxygen
  git:
    repo: https://github.com/doxygen/doxygen.git
    dest: "{{ doxygen_repos }}"
    clone: true
    version: "{{ doxygen_repo_version | default('HEAD') }}"
    update: true
  register: git_clone_doxygen

- name: Make sure some system dependencies are installed
  become: true
  apt:
    name: "{{ item }}"
    state: 'present'
  loop:
    - python
    - flex
    - bison
    - build-essential
    - git
    - graphviz
    - ninja-build

- name: Create the build folder
  file:
    path: "{{ doxygen_repos }}/build"
    state: 'directory'

- name: Configure before running build for doxygen
  when: ansible_lsb.release != '16.04' and (git_clone_doxygen.changed or doxygen_present.changed)
  shell:
    chdir: "{{ doxygen_repos }}/build"
    cmd: |
      cmake -G "Ninja" \
        -DCMAKE_BUILD_TYPE=Release \
        -Duse_libclang=YES \
        ..

- name: Configure before running build for doxygen
  when: ansible_lsb.release == '16.04' and (git_clone_doxygen.changed or doxygen_present.changed)
  shell:
    chdir: "{{ doxygen_repos }}/build"
    cmd: |
      cmake -G "Ninja" \
        -DCMAKE_BUILD_TYPE=Release \
        ..

- name: Compile doxygen
  when: git_clone_doxygen.changed or doxygen_present.changed
  shell:
    chdir: "{{ doxygen_repos }}/build"
    cmd: |
      ninja

- name: update doxygen
  when: git_clone_doxygen.changed or doxygen_present.changed
  become: true
  shell:
    chdir: "{{ doxygen_repos }}/build"
    cmd: |
      ninja install

