---
- name: Remove system installed package, as I am building from source
  become: true
  apt:
    name: pinta
    state: absent

- name: Check if pinta is installed
  shell: command -v pinta && echo good || echo bad
  register: pinta_present
  changed_when: "'bad' in pinta_present.stdout"

- name: Check if the folder exists
  stat:
    path: "{{ pinta_repos }}"
  register: pinta_repos_exists

- name: Temp Patch to get around the https://github.com/ansible/ansible/issues/67972
  when: "pinta_repos_exists.stat.exists"
  shell:
    cmd: git fetch --tags -f
    chdir: "{{ pinta_repos }}"
  register: git_fetch_pinta
  changed_when: "git_fetch_pinta.rc != 0"

- name: Get latest source code for pinta
  git:
    repo: https://github.com/PintaProject/Pinta.git
    dest: "{{ pinta_repos }}"
    clone: true
    version: "{{ pinta_repo_version | default('HEAD') }}"
    update: true
  register: git_clone_pinta

- name: Make sure some system dependencies are installed
  become: true
  apt:
    name: "{{ item }}"
    state: 'present'
  loop:
    - make
    - automake
    - autoconf
    - mono-devel
    - gtk-sharp2
    - intltool

- name: Make sure some system dependencies are installed Ubuntu 16
  when: "ansible_lsb.release == '16.04'"
  become: true
  apt:
    name: "{{ item }}"
    state: 'present'
  loop:
    - tzdata

- name: Configure before running build for pinta
  when: git_clone_pinta.changed or pinta_present.changed
  shell:
    chdir: "{{ pinta_repos }}"
    cmd: |
      ./autogen.sh

- name: Compile pinta
  when: git_clone_pinta.changed or pinta_present.changed
  community.general.make:
    chdir: "{{ pinta_repos }}"
  register: pinta_built

- name: update pinta
  when: git_clone_pinta.changed or pinta_present.changed
  community.general.make:
    chdir: "{{ pinta_repos }}"
    target: install
  register: pinta_built
  become: true

# vim:et ts=2 sts=2 sw=2
