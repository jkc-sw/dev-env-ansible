---
- name: Install LSP dependencies based on disto
  include_tasks: others.yml
  when: "ansible_lsb.release == '18.04' or ansible_lsb.release == '20.04'"
  vars:
    clangd_name: 'clangd-10'
    clang_name: 'clang-10'
    pkgs:
      - unzip
      - clangd-10
      - clang-10

- name: Install LSP dependencies based on disto
  include_tasks: others.yml
  when: "ansible_lsb.release == '16.04'"
  vars:
    clangd_name: 'clangd-8'
    clang_name: 'clang-8'
    pkgs:
      - unzip
      - clang-tools-8

- name: Check if luacheck is installed
  shell: command -v luacheck && echo good || echo bad
  register: luacheck_present
  changed_when: "'bad' in luacheck_present.stdout"

- name: Install luacheck if not installed
  become: true
  shell: luarocks install luacheck
  when: luacheck_present.changed

- name: Get the npm path
  shell:
    executable: /bin/bash
    cmd: |
       {{ source_shellfunc }} && which npm
  register: which_npm
  failed_when: "which_npm.rc != 0"
  changed_when: "which_npm.rc != 0"

- name: Install many lsps
  # use environment workaround here: https://github.com/ansible/ansible/issues/55289
  npm:
    global: true
    name: "{{ item }}"
    state: present
    # executable: "{{ which_npm.stdout }}"
  with_items:
    - typescript
    - typescript-language-server
    - yaml-language-server
    - dockerfile-language-server-nodejs
    - bash-language-server
    - vscode-json-languageserver
  environment:
    PATH: "{{ which_npm.stdout | dirname }}:{{ nvm_path }}"

- name: Install many lsp from pip
  shell:
    cmd: |
      {{ dev_condaenv }}/bin/python -m pip \
        --disable-pip-version-check \
        --no-python-version-warning \
        install \
        'python-language-server[all]' \
        pyyaml \
        cmake-language-server \
        hdl-checker
  register: pipinstall
  failed_when: "pipinstall.rc != 0"
  changed_when: "pipinstall.rc != 0"

- name: Install luals for the correct distro
  include_tasks: luals.yml
  when: "ansible_lsb.release == '18.04' or ansible_lsb.release == '20.04'"
