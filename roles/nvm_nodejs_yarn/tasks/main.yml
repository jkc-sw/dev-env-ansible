---
- name: Check if the nvm is installed
  shell:
    cmd: "/bin/bash -i -c '{{ source_shellfunc }} && command -v nvm && echo good || echo bad'"
    executable: /bin/bash
  register: nvm_present
  changed_when: "'bad' in nvm_present.stdout"

- name: Get the installer
  when: nvm_present.changed
  get_url:
    url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
    dest: "{{ nvm_install_script }}"

- name: Install nvm
  shell:
    cmd: "/bin/bash {{ nvm_install_script }}"
  when: nvm_present.changed
  register: nvm_install
  args:
    warn: false

- name: Remove installer
  file:
    path: "{{ nvm_install_script }}"
    state: 'absent'

- name: Make sure no source line exist
  lineinfile:
    path: "{{ item }}"
    regex: '.*NVM_DIR.*'
    state: absent
    backup: true
  with_items:
    - "{{ bashrc_path }}"
    - "{{ zshrc_path }}"

- name: Install latest node lts
  shell:
    cmd: "bash -i -c '{{ nvm_bin }} install {{ node_version_via_nvm }}'"
    executable: /bin/bash
  register: node_install
  changed_when: 'node_install.rc != 0'
  failed_when: 'node_install.rc != 0'

- name: Alias the node to be the default
  shell:
    cmd: "bash -i -c '{{ nvm_bin }} alias default {{ node_version_via_nvm }}'"
    executable: /bin/bash
  register: node_alias
  changed_when: 'node_alias.rc != 0'
  failed_when: 'node_alias.rc != 0'

- name: Use the specified node
  shell:
    cmd: "bash -i -c '{{ use_node }}'"
    executable: /bin/bash
  register: nvm_use_use
  changed_when: 'nvm_use_use.rc != 0'
  failed_when: 'nvm_use_use.rc != 0'

- name: Get the npm path
  shell:
    executable: /bin/bash
    cmd: |
       {{ source_shellfunc }} && which npm
  register: which_npm
  failed_when: "which_npm.rc != 0"
  changed_when: "which_npm.rc != 0"

- name: Install many clis
  # use environment workaround here: https://github.com/ansible/ansible/issues/55289
  npm:
    global: true
    name: "{{ item }}"
    state: present
    # executable: "{{ which_npm.stdout }}"
  environment:
    PATH: "{{ which_npm.stdout | dirname }}:{{ ansible_env.PATH }}"
  with_items:
    - gtop
    - tree-sitter-cli

- name: Download and Add yarn Key to Apt-Get Keyring
  become: true
  apt_key:
    url: "https://dl.yarnpkg.com/debian/pubkey.gpg"
    state: present

- name: Add yarn Repository into /etc/apt/sources.list
  become: true
  apt_repository:
    repo: 'deb [arch=amd64] https://dl.yarnpkg.com/debian/ stable main'
    state: present

- name: Install yarn
  become: true
  apt:
    name: 'yarn'
    state: present
    install_recommends: false
